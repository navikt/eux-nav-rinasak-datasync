spring:

  datasource:
    hikari:
      jdbc-url: "jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}"
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      driver-class-name: org.postgresql.Driver
      maximum-pool-size: 2
      minimum-idle: 1
      initialization-fail-timeout: 60000

  jpa:
    open-in-view: false
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: true
        format_sql: true
        jdbc:
          batch_size: 50
        order_updates: true
        order_inserts: true

  flyway:
    clean-on-validation-error: true
    clean-disabled: false

  thymeleaf:
    cache: false

  web:
    resources:
      cache:
        period: 0

no.nav.security.jwt:
  issuer:
    azuread:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted-audience: ${AZURE_APP_CLIENT_ID}
      cookie-name: openam-idtoken

  client:
    registration:
      eux-case-store-credentials:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: api://dev-fss.eessibasis.eux-case-store-q2/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt

      eux-nav-rinasak-credentials:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: api://dev-gcp.eessibasis.eux-nav-rinasak-q2/.default
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-jwk: ${AZURE_APP_JWK}
          client-auth-method: private_key_jwt

endpoint:
  eux:
    casestore: https://eux-case-store-q2.dev-fss-pub.nais.io
    navrinasak: http://eux-nav-rinasak-q2
